# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2


class APIStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListItem = channel.unary_unary(
        '/API/ListItem',
        request_serializer=api__pb2.ListItemRequest.SerializeToString,
        response_deserializer=api__pb2.ListItemResponse.FromString,
        )
    self.GetItem = channel.unary_unary(
        '/API/GetItem',
        request_serializer=api__pb2.GetItemRequest.SerializeToString,
        response_deserializer=api__pb2.Item.FromString,
        )
    self.AddItem = channel.unary_unary(
        '/API/AddItem',
        request_serializer=api__pb2.Item.SerializeToString,
        response_deserializer=api__pb2.AddItemResponse.FromString,
        )
    self.UpdateItem = channel.unary_unary(
        '/API/UpdateItem',
        request_serializer=api__pb2.UpdateItemRequest.SerializeToString,
        response_deserializer=api__pb2.UpdateItemResponse.FromString,
        )
    self.DeleteItem = channel.unary_unary(
        '/API/DeleteItem',
        request_serializer=api__pb2.DeleteItemRequest.SerializeToString,
        response_deserializer=api__pb2.DeleteItemResponse.FromString,
        )


class APIServicer(object):

  def ListItem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetItem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddItem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateItem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteItem(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListItem': grpc.unary_unary_rpc_method_handler(
          servicer.ListItem,
          request_deserializer=api__pb2.ListItemRequest.FromString,
          response_serializer=api__pb2.ListItemResponse.SerializeToString,
      ),
      'GetItem': grpc.unary_unary_rpc_method_handler(
          servicer.GetItem,
          request_deserializer=api__pb2.GetItemRequest.FromString,
          response_serializer=api__pb2.Item.SerializeToString,
      ),
      'AddItem': grpc.unary_unary_rpc_method_handler(
          servicer.AddItem,
          request_deserializer=api__pb2.Item.FromString,
          response_serializer=api__pb2.AddItemResponse.SerializeToString,
      ),
      'UpdateItem': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateItem,
          request_deserializer=api__pb2.UpdateItemRequest.FromString,
          response_serializer=api__pb2.UpdateItemResponse.SerializeToString,
      ),
      'DeleteItem': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteItem,
          request_deserializer=api__pb2.DeleteItemRequest.FromString,
          response_serializer=api__pb2.DeleteItemResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'API', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
